#!/system/bin/sh

BB=/system/xbin/busybox;

cat << CTAG
{
    name:Memory,
    elements:[
	{ SLiveLabel:{
		title:"Memory state",
		refresh:1000,
		action:"live LiveMemory"
	}},
	{ SLiveLabel:{
		title:"Swap state",
		refresh:1000,
		action:"live LiveSwap"
	}},
	{ SSpacer:{
		height:1
	}},
	{ SPane:{
		title:"Samsung SPCM Service",
		description:"Enabling will allow the Samsung SPCM service to kill apps running in the background, but those only that haven't been used for a period of time. Disabling will revert to standard OOM killer and may help prevent apps/services meant to run in the background being killed (eg. Facebook and Swiftkey)."
	}},
	{ SSpacer:{
		height:1
	}},
	{ SOptionList:{
		title:"Enable Samsung SPCM Service",
		description:" ",
		default:$(echo "$(/res/synapse/actions/devtools spcm_service)"),
		action:"devtools spcm_service",
		values:[Enabled, Disabled,]
	}},
	{ SSpacer:{
		height:1
	}},
	{ SPane:{
		title:"Ultra Kernel SamePage Merging (UKSM)",
		description:"Transparently scans and merges memory (duplicated pages) at a significantly improved scan speed & CPU efficiency over stock KSM."
	}},
	{ SSpacer:{
		height:1
	}},
	{ SOptionList:{
		title:"Enable UKSM",
		description:" ",
		default:0,
		action:"generic /sys/kernel/mm/uksm/run",
		values:{
			0:"Disabled", 1:"Enabled"
		}
	}},
	{ SSpacer:{
		height:1
	}},
	{ SLiveLabel:{
                title:"UKSM stats",
		description:"Memory samepage merging is not a quick process, so stats may initially show 0 MB.",
		refresh:3000,
		action:"live UKSMStats"
	}},
	{ SSpacer:{
		height:1
	}},
	{ SSeekBar:{
		title:"Scan Delay Interval",
		description:"Set how long the daemon sleeps before it wakes up and starts scanning memory pages. Default is 0.5.\n",
		unit:" sec",
		step:100,
		min:0,
		max:1000,
		weight:0.001,
		default:$(cat /sys/kernel/mm/uksm/sleep_millisecs),
		action:"generic /sys/kernel/mm/uksm/sleep_millisecs"
	}},
	{ SSpacer:{
		height:1
	}},
	{ SOptionList:{
		title:"UKSM CPU Governor",
		description:"Controls how aggressively the daemon uses CPU power. This sets a preset for the maximum CPU consumption below.\n\n full = 18 % \n med = 12 %\n low = 7 %\n quiet = 1 %\n",
		default:$(cat /sys/kernel/mm/uksm/cpu_governor | $BB awk 'NR>1{print $1}' RS=[ FS=]),
		action:"UKSM_gov /sys/kernel/mm/uksm/cpu_governor",
		values:[`while read values; do $BB printf "%s, \n" $values | $BB tr -d '[]'; done < /sys/kernel/mm/uksm/cpu_governor`],
		notify:[
				{
					on:APPLY,
					do:[ REFRESH, APPLY ],
					to:[
						"generic /sys/kernel/mm/uksm/max_cpu_percentage"
					],
				}
		]
	}},
	{ SSpacer:{
		height:1
	}},
	{ SSeekBar:{
		title:"Max CPU Consumption",
		description:"The maximum CPU consumption the daemon will use while scanning. Higher = better scanning (more battery drain).\n",
		unit:" %",
		step:1,
		min:1,
		max:75,
		default:$(cat /sys/kernel/mm/uksm/max_cpu_percentage),
		action:"generic /sys/kernel/mm/uksm/max_cpu_percentage"
	}},
	{ SSpacer:{
		height:1
	}},
	{ STitleBar:{
		title:"Virtual Memory",
		description:"Tune the operation of the VM subsystem of the Linux kernel and the writeout of dirty data to disk."
	}},
	{ SSpacer:{
		height:1
	}},
	{ SOptionList:{
		title:"Enable Virtual NAND Swap",
		description:"VNSwap attempts to increase performance by avoiding paging on physical storage, instead using a compressed virtual device in RAM. Paging takes place in RAM until it is necessary to use the swap space on physical storage. Depending on the amount of swap currently in use, this process can take ~1 minute with Synapse being UNRESPONSIVE during this time. PLEASE WAIT for the process to finish.\n\n Disabling or Enabling will auto set swappiness to 0 or 190 respectively. Default is Enabled.\n",
		default:Enabled,
		action:"swaps vnswap0",
		values:[Disabled, Enabled,],
		notify:[
			{
				on:APPLY,
				do:[ REFRESH, APPLY ],
				to:"generic /proc/sys/vm/swappiness"
			}
		]
	}},
	{ SSpacer:{
		height:1
	}},
	{ SOptionList:{
		title:"Enable Drop Caches (Clear VFS Cache After Boot)",
		description:"This option will force rebuild of file system cache based on actual app usage rather than boot/startup processes. NOTE: This process can take from 1-2 minutes (Enable for better file system read/write performance).\n",
		default:0,
		action:"dropcaches /res/synapse/prom/dropcaches_prof",
		values:{ 0:"Disabled", 1:"Enabled"
		}
	}},
	{ SSpacer:{
		height:1
	}},
	{ SOptionList:{
		title:"Enable Laptop Mode (Auto FS Writeback Delay Mode)",
		description:"This option will delay the writebacks of file system bits cached in RAM while screen is ON (Enable for better performance @ slight risk of possible data loss if crashed or sudden loss of power).\n",
		default:0,
		action:"generic /proc/sys/vm/laptop_mode",
		values:{ 0:"Disabled", 1:"Enabled"
		}
	}},
	{ SSpacer:{
		height:1
	}},
	{ SSeekBar:{
		title:"swappiness",
		description:"A low value means the kernel will try to avoid swapping as much as possible where a higher value instead will make the kernel aggressively try to use swap space. Default is 180.\n",
		max:200,
		min:0,
		step:10,
		default:$(cat /proc/sys/vm/swappiness),
		action:"generic /proc/sys/vm/swappiness",
	}},
	{ SSpacer:{
		height:1
	}},
		`if [ -f "/sys/devices/virtual/block/zram0/disksize" ]; then
		ZRAM=\`$BB cat /sys/devices/virtual/block/zram0/disksize\`;
		ZRAM=$((ZRAM / 1024 / 1024));
		$BB echo '{ SPane:{
			title:"Z-RAM",
			description:"Attempts to increase performance by avoiding paging on physical storage, instead using a compressed virtual device in RAM. Paging takes place in RAM until it is necessary to use the swap space on physical storage."
		}},
			{ SSeekBar:{
				unit:" MB",
				step:10,
				min:0,
				max:2048, 
				default:'$ZRAM',
				action:"zram /sys/devices/virtual/block/zram0/disksize"
			}},'
		fi`
		`if [ -f "/sys/block/zram0/max_comp_streams" ]; then
		MCS=\`$BB cat /sys/block/zram0/max_comp_streams\`;
			$BB echo '{ SSeekBar:{
				title:"Max Compression Streams",
				description:"Applying a different option will reset Z-RAM. Can have N write operations (depending on size of streams list) executing in parallel.",
				min:1,	max:10,
				step:1,
				default:'$MCS',
				action:"zram-generic /sys/block/zram0/max_comp_streams",
			}},'
		fi` 
    ]
}
CTAG
