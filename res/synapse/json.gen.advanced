#!/system/bin/sh

cat << CTAG
{
    name:Advanced,
    elements:[
	{ SPane:{
	title:"Kernel Entropy"
	}},
	{ SSpacer:{
		height:1
	}},
	{ SLiveLabel:{
		title:"Entropy Available",
		refresh:1000,
		action:"live entropy"
	}},
	{ SSeekBar:{
		title:"Read Wakeup Threshold",
		description:"Default is 256.\n",
		max:2048, min:64, step:64,
		default:$(cat /proc/sys/kernel/random/read_wakeup_threshold),
		action:"generic /proc/sys/kernel/random/read_wakeup_threshold"
	}},
	{ SSpacer:{
		height:1
	}},
	{ SSeekBar:{
		title:"Write Wakeup Threshold",
		description:"Default is 320.\n",
		max:2048, min:64, step:64,
		default:$(cat /proc/sys/kernel/random/write_wakeup_threshold),
		action:"generic /proc/sys/kernel/random/write_wakeup_threshold"
	}},
	{ SSpacer:{
		height:1
	}},
	{ SPane:{
		title:"Randomisation",
		description:"Disabling (0) virtual address randomisation may improve GUI responsiveness."
	}},
	{ SSpacer:{
		height:1
	}},
	{ SSeekBar:{
		title:"randomize_va_space",
		description:" ",
		max:2,
		min:0,
		step:1,
		default:$(cat /proc/sys/kernel/randomize_va_space),
		action:"generic /proc/sys/kernel/randomize_va_space"
	}},
	{ SSpacer:{
		height:1
	}},
	{ SPane:{
		title:"Freeze Timeout",
		description:"Controls how long it will cost at most to freeze all user space processes or all freezable kernel threads.",
	}},
	{ SSpacer:{
		height:1
	}},
	{ SSeekBar:{
		title:"pm_freeze_timeout",
		description:" ",
		unit:" sec",
		max:20000,
		min:1000,
		step:100,
		weight:0.001,
		default:$(cat /sys/power/pm_freeze_timeout),
		action:"generic /sys/power/pm_freeze_timeout"
	}},
	{ SSpacer:{
		height:1
	}},
    ]
}
CTAG
